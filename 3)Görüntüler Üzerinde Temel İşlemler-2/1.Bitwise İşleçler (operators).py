import cv2
import numpy as np

img1 = cv2.imread("bitwise_1.png")
img2 = cv2.imread("bitwise_2.png")

bit_and = cv2.bitwise_and(img2,img1) # ikinci ve birinci resmi and işlemi ile karşılaştırır(siyah renkler 0'lar ile beyaz renkler 1'ler ile tamsil edilir)...
cv2.imshow("img1",img1) # birinci resmin orjinal halini gösterir...
cv2.imshow("img2",img2) # ikinci resmin orjinal halini gösterir...
cv2.imshow("bit_and",bit_and) # iki resmin and'lenmiş halini gösterir...

bit_or = cv2.bitwise_or(img2,img1) # ikinci ve birinci resmi or işlemi ile karşılaştırır...
cv2.imshow("img1",img1) # birinci resmin orjinal halini gösterir...
cv2.imshow("img2",img2) # ikinci resmin orjinal halini gösterir...
cv2.imshow("bit_or",bit_or) # iki resmin and'lenmiş halini gösterir...

bit_xor  = cv2.bitwise_xor(img2,img1) # ikinci ve birinci resmi xor işlemi ile karşılaştırır...
cv2.imshow("img1",img1) # birinci resmin orjinal halini gösterir...
cv2.imshow("img2",img2) # ikinci resmin orjinal halini gösterir...
cv2.imshow("bit_xor",bit_xor) # iki resmin and'lenmiş halini gösterir...

bit_not = cv2.bitwise_not(img1) # birinci resme not işlemini uygular...
cv2.imshow("img1",img1) # birinci resmin orjinal halini gösterir...
cv2.imshow("img2",img2) # ikinci resmin orjinal halini gösterir...
cv2.imshow("bit_not",bit_not) # iki resmin and'lenmiş halini gösterir...

bit_not2 = cv2.bitwise_not(img2) # ikinci resme not işlemini uygular...
cv2.imshow("img1",img1) # birinci resmin orjinal halini gösterir...
cv2.imshow("img2",img2) # ikinci resmin orjinal halini gösterir...
cv2.imshow("bit_not2",bit_not2) # iki resmin and'lenmiş halini gösterir...





cv2.waitKey(0)
cv2.destroyAllWindows()